#!/bin/bash
[ -n "${METANIX_TRACE:-}" ] && set -x
set -efuo pipefail

readonly CRATE2NIX="$(which crate2nix)"
readonly SCRIPT="$(readlink -f "$0")"
readonly MYNAME="$(basename "$SCRIPT")"
readonly RESOURCEDIR="$(readlink -f "$(dirname "$SCRIPT")/../share/$MYNAME")"

function main
{
  local subcommand='help'
  if [ $# -gt 0 ]
  then
    subcommand="$1"
    shift
  fi

  case "$subcommand" in
    help|--help) show-help ;;
    build) build-or-install-specimen 'nix build' "$@";;
    install) build-or-install-specimen 'nix-env -i' "$@";;
    *)
      echo "Error: Unknown subcommand: $subcommand"
      echo
      show-help
      ;;
  esac
}

function show-help
{
  sed 's/^    //' <<__EOF
    $(basename "$0") <subcommand>

    Subcommands:

      help | --help
        This help text.

      build [ <specimen> ]
        Generate a nix expression, if possible, and build it with 'nix-build'.

      install [ <specimen> ]
        Generate a nix expression, if possible, and install it with 'nix-env'.

    <specimen> is a package root directory, and if not provided defaults
    to the current directory.
__EOF
}

function build-or-install-specimen
{
  NIXCMD="$1"
  shift

  local specimen='.'

  if [ $# -gt 0 ]
  then
    specimen="$1"
    shift
    [ $# -eq 0 ] || fail "Unexpected args: $*"
  fi

  process-specimen "$(readlink -f "$specimen")"
}

function process-specimen
{
  local specimen="$1"
  if [ -f "$specimen/Cargo.toml" ]
  then
    process-specimen-cargo "$specimen"
  else
    fail "Unknown package format for specimen: $specimen"
  fi
}

function process-specimen-cargo
{
  local specimen="$1"

  echo "Identified cargo package: $specimen"

  TMPSRC="$(mktemp --tmpdir -d "metanix.$(basename "$specimen").XXX")"

  cp "$RESOURCEDIR/cargo-default.nix" "$TMPSRC/default.nix"
  chmod -R u+w "$TMPSRC"

  local nixgen="$TMPSRC/Cargo.nix"

  run "$CRATE2NIX" generate -f "$specimen/Cargo.toml" -o "$nixgen"
  run $NIXCMD -f "$TMPSRC"
  run rm -r "$TMPSRC"
}

function run
{
  echo "Running: $*"
  eval "$@"
}

function fail
{
  echo "Fail: $*"
  exit 1
}

main "$@"
