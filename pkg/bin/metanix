#!/bin/bash
[ "${METANIX_TRACE:-0}" -gt 1 ] && set -x
set -efuo pipefail

readonly SCRIPT="$(readlink -f "$0")"
readonly MYNAME="$(basename "$SCRIPT")"
readonly RESOURCEDIR="$(readlink -f "$(dirname "$SCRIPT")/../share/$MYNAME")"
readonly META_NIX="${RESOURCEDIR}/meta.nix"

function main
{
  local subcommand='help'
  if [ $# -gt 0 ]
  then
    subcommand="$1"
    shift
  fi

  case "$subcommand" in
    help|--help) show-help ;;
    build|install) build-or-install-specimen "$subcommand" "$@";;
    *)
      echo "Error: Unknown subcommand: $subcommand"
      echo
      show-help
      ;;
  esac
}

function show-help
{
  sed 's/^    //' <<__EOF
    $(basename "$0") <subcommand>

    Subcommands:

      help | --help
        This help text.

      build [ <targetpath> ]
        Generate a nix expression, if possible, and build it with 'nix-build'.

      install [ <targetpath> ]
        Generate a nix expression, if possible, and install it with 'nix-env'.

    <targetpath> is a package root directory, and if not provided defaults
    to the current directory.
__EOF
}

function build-or-install-specimen
{
  local subcommand="$1"
  shift

  local specimen='.'

  if [ $# -gt 0 ]
  then
    specimen="$1"
    shift
    [ $# -eq 0 ] || fail "Unexpected args: $*"
  fi

  process-specimen "$subcommand" "$(readlink -f "$specimen")"
}

function process-specimen
{
  local subcommand="$1"
  local specimen="$2"

  case "$subcommand" in
    build) run nix-build --argstr targetPath "$specimen" "$META_NIX" ;;
    install) run nix-env --argstr targetPath "$specimen" --install -f "$META_NIX" ;;
    *) fail "Internal error - unexpected subcommand: $subcommand"
  esac
}

function run
{
  [ "${METANIX_TRACE:-0}" -eq 1 ] && echo "Running: $*"
  eval "$@"
}

function fail
{
  echo "Fail: $*"
  exit 1
}

main "$@"
